#!/bin/bash

# Daniel M. Lofaro (dan@danlofaro.com)
sudo ls > /dev/null



export LD_LIBRARY_PATH=/usr/lib:
export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:/usr/local/lib"


MDS_CAN='can0'
MDS_BAUD=1000000

MDS_NAMESPACE='mds'
MDS_REF_CHAN='mds-ref'
MDS_REF_FILTER_CHAN='mds-ref-filter'
MDS_IK_CHAN='mds-ik'
MDS_COLLIDE_CHAN='mds-collide'
MDS_PARAM_CHAN='mds-param'
MDS_STATE_CHAN='mds-state'
MDS_CMD_CHAN='mds-cmd'
MDS_PID_FILE='mds-pid.log'
MDS_HOME_DIR='/etc/mds-ach'
MDS_PYTHON_DIR=$MDS_HOME_DIR'/python'
MDS_MODEL_DIR=$MDS_HOME_DIR'/model/mds'
MDS_CONFIG_DIR=$MDS_HOME_DIR'/configs'


DAEMON_LOG_DIR='/var/log/mds'
LOCK_DIR='/var/lock/mds'

FLAG_REMOTE=0
FLAG_NOCONSOLE=0
FLAG_NOCAN=0

MDS_REMOTE_ADDRESS='0.0.0.0'

trim()
{
  local var=$@
  echo -n "${var//[[:space:]]/}"
}


MakeAch()
{
	ach -1 mk $MDS_REF_CHAN -m 10 -n 3000
	ach -1 mk $MDS_REF_FILTER_CHAN -m 10 -n 3000
	ach -1 mk $MDS_PARAM_CHAN -m 10 -n 3000
        ach -1 mk $MDS_STATE_CHAN -m 10 -n 3000
        ach -1 mk $MDS_CMD_CHAN -m 10 -n 3000
        ach -1 mk $MDS_IK_CHAN -m 10 -n 3000
        ach -1 mk $MDS_COLLIDE_CHAN -m 10 -n 3000
        sudo chmod 777 /dev/shm/achshm-$MDS_NAMESPACE*
}

KillAch()
{
        sudo rm -rf /dev/shm/achshm-$MDS_NAMESPACE*
}

OpenCan()
{

  # List details
  ip -details -statistics link show $MDS_CAN

  # put can down
  sudo ifconfig $MDS_CAN down

  # set can to baud
  sudo ip link set $MDS_CAN type can bitrate $MDS_BAUD
  sudo ip link set $MDS_CAN type can sample-point 0.5
  # this might fix the bus-off problem
  sudo ip link set $MDS_CAN type can restart-ms 100 

  # increase buffer size
  sudo ip link set $MDS_CAN txqueuelen 100000 

  # put can up
  sudo ifconfig $MDS_CAN up

  # List details
  ip -details -statistics link show $MDS_CAN

  if [[ $FLAG_NOCAN -eq 1 ]]
  then
	sudo rmmod vcan
        sudo modprobe vcan
	sudo ip link add dev vcan42 type vcan
        sudo ipconfig vcan42 up
	echo "vcan42 set"
  fi

}

BusReset()
{
  OpenCan
}

KillAll()
{
  Kill
  KillAch
  KillRemote
  KillSim
}

KillSim()
{
  sudo kill -9 $(pidof gzclient)
  sudo kill -9 $(pidof gzserver)
}

Kill()
{
#	sudo updatedb
        sudo kill -9 $(cat $MDS_HOME_DIR/$MDS_PID_FILE) 
	sudo kill -9 $(pidof mds-daemon)
	sudo kill -9 $(pidof mds-filter)
        #screen -S mdsik -p 0 -X quit

        sudo rm -r $MDS_HOME_DIR/$MDS_PID_FILE
}

Remote()
{

case "$1" in 
'kill')
	KillRemote
;;
*)
	MakeAch
	achd -r push $1 $MDS_REF_CHAN &
	achd -r pull $1 $MDS_STATE_CHAN &
	achd -r pull $1 $MDS_PARAM_CHAN &
	achd -r push $1 $MDS_CMD_CHAN &

;;
esac

}

Sim()
{
   case $1 in
      'kill')
            KillSim
   ;;
   *)
        echo 'running sim in gazebo'
        echo $MDS_MODEL_DIR
       # gazebo $MDS_MODEL_DIR/model.world
        gzclient
   ;;
   esac
}

KillRemote()
{
	sudo kill -9 $(pidof achd)
}


ChangeRobot()
{
    case $1 in
      'isaac' )
        sudo cp $MDS_CONFIG_DIR/Isaac.anatomy.xml $MDS_CONFIG_DIR/anatomy.xml
        echo '-- Robot Changed to Isaac --'
      ;;
      'lucas' )
        sudo cp $MDS_CONFIG_DIR/Lucas.anatomy.xml $MDS_CONFIG_DIR/anatomy.xml
        echo '-- Robot Changed to Lucas --'
      ;;
      'octavia' )
        sudo cp $MDS_CONFIG_DIR/Octavia.anatomy.xml $MDS_CONFIG_DIR/anatomy.xml
        echo '-- Robot Changed to Octavia --'
      ;;
      *)
        echo '-- No Change to Robot --'
      ;;
      esac

}

ShowUsage()
{
	echo
	echo 'start         : Start all channels and processes and consle'
	echo 'stop          : Close all channels and processes'
        echo 'make          : Makes all the MDS channels'
        echo 'read          : Starts read utility'
        echo 'console       : Start console utility'
	echo 'kill          : Emergency kill the daemon process'
	echo 'killall       : Emergency kill the daemon process and removes all ACH channels'
        echo 'resetbus      : Resets the CAN Bus'
	echo 'remote        : Starts a remote connection to xxx.xxx.xxx.xxx via achd'
	echo '		    : Options:'
	echo '              :     (no-arg)   : Starts remote connections'
	echo '              :     kill       : Kills remote connection'
	echo 'sim           : Starts the sim in gazebo'
	echo '		    : Options:'
	echo '              :     (no-arg)   : Starts the sim in gazebo'
	echo '              :     kill       : Kills gazebo sim'
	echo 'nocan         : Runs system in NO CAN mode.  i.e. creates a virtural can bus'
        echo '              : Statement can be placed anywhere in the startup command'
        echo 'changerobot   : Changes robot configuration file'
        echo '              : Options:'
        echo '              :     (no-arg)   : No change'
        echo '              :     isaac      : changes to Isaacs anatomy'
        echo '              :     lucas      : changes to Lucas anatomy'
        echo '              :     octavia    : change to Octavias anatomy'
	echo
}


Console()
{
  python $MDS_PYTHON_DIR/mds_console.py read
}

Read()
{
  python $MDS_PYTHON_DIR/mds_read.py read
}


Start()
{
  OpenCan
  MakeAch
  python $MDS_PYTHON_DIR/mds_xml_parser.py

  DAEMON_ARGS=''
  if [[ $FLAG_NOCAN -eq 1 ]]
  then
	DAEMON_ARGS+=" -v"
  fi

  sudo touch $MDS_HOME_DIR/$MDS_PID_FILE
  sudo chmod 777 $MDS_HOME_DIR/$MDS_PID_FILE
  nohup sudo mds-daemon $DAEMON_ARGS & echo $! >> $MDS_HOME_DIR/$MDS_PID_FILE
  nohup sudo mds-filter & echo $! >> $MDS_HOME_DIR/$MDS_PID_FILE
  nohup python $MDS_PYTHON_DIR/mds_ik_module.py >> /dev/null & echo $! >> $MDS_HOME_DIR/$MDS_PID_FILE
  gzserver $MDS_MODEL_DIR/model.world & echo $! >> $MDS_HOME_DIR/$MDS_PID_FILE
  mds-collision-checker & echo $! >> $MDS_HOME_DIR/$MDS_PID_FILE
#  screen -S mdsik -d -m mds_ik_module.py
}

SetFlags()
{
MDS_I=0
MDS_TEMP1="$@"
MDS_TEMP=($MDS_TEMP1)
for var in "$@"
do
#    echo "$var"
    case "$var" in
      'remote' )
	  FLAG_REMOTE=1
          MDS_REMOTE_ADDRESS=${MDS_TEMP[$(($MDS_I+1))]}
	  echo "Remote address set: "$MDS_REMOTE_ADDRESS
      ;;
      'nocan' )
	  FLAG_NOCAN=1
	  echo "No CAN mode set"
      ;;
    esac
    MDS_I=$(($MDS_I+1))

done
}



SetFlags $@
case "$1" in
# Start all channels and processes
	'make' )
		MakeAch $@
	;;

# Start all channels and processes and Console
	'start' )
		Start $@
	;;

# Start remote via achd
	'remote' )
		Remote $2
	;;

# Starts MDS read
        'read' )
                Read
        ;;

# Close all channels and processes
	'stop' )
		StopHubo $2
	;;

# Kill all hubo processies and remove ach
	'killall' )
		KillAll
	;;

# Emergency kill
	'kill' )
		Kill $2
	;;

# Start console
	'console' )
		Console
	;;

# Starts the sim
	'sim' )
		Sim $2
	;;
# Changes robot
        'changerobot' )
               ChangeRobot $2
        ;;

# Reset Bus
        'resetbus' )
               BusReset
         ;;

	*)
		ShowUsage
		exit 1
	;;
esac

exit 0

# Local Variables:
#  indent-tabs-mode:t
#  tab-width: 8
#  c-basic-offset: 8
# End:
